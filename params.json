{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Toast Open Automation System for Test","google":"","body":"## Introduction\r\n\r\nTOAST is short for \"Toast Open Automation System for Test\". \r\n\r\nBasicly speaking, it's a tool to run your automation test case/code in a specific test box and then show the test result back to you via Email notification or from web UI test result page.\r\n\r\nAbout automation test case, actually if a test case was automated, a corresponding test code (usually based on a specific programming test framework, such as Xunit, Selenium or etc...) having been written already, from running aspect we look test code (usually a test method in souce code) as test case. Test code is built to excutable binary and it will run on a test box against deployed test environment. Since test code is written \r\n\r\n\r\n## Setup \r\n\r\nTOAST compose of three parts:\r\n  * Front End, including Web UI and DB.\r\n  * Back End, or Controller.\r\n  * Test Box, we call it as \"test agent\" or \"agent\".\r\n\r\nfor each part installation, see [install link](http://github.com/taobao/toast/install).\r\n\r\n\r\n## Usage\r\n\r\nHere is the whole process we suggest,\r\n\r\n\r\n\r\n## Bug tracker\r\n\r\nHave a bug or a feature request? [Please open a new issue](https://github.com/taobao/toast/issues). Before opening any issue, please search for existing issues and read the [Issue Guidelines](https://github.com/taobao/toast/issue-guidelines).\r\n\r\n","name":"TOAST"}